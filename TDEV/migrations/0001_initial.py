# Generated by Django 4.2.1 on 2023-10-24 20:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Annonce",
            fields=[
                ("IdAnnonce", models.BigAutoField(primary_key=True, serialize=False)),
                ("Libelle", models.CharField(max_length=200)),
                ("DateDebut", models.DateTimeField()),
                ("DateFin", models.DateTimeField()),
                ("Description", models.TextField()),
                ("Etat", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Commentaire",
            fields=[
                (
                    "IdCommentaire",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("Remarque", models.TextField()),
                ("Date", models.DateTimeField(auto_now=True)),
                ("Etat", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Evaluation",
            fields=[
                ("IdEval", models.BigAutoField(primary_key=True, serialize=False)),
                ("Date", models.DateTimeField(auto_now=True)),
                (
                    "Critere",
                    models.CharField(
                        choices=[
                            ("Mise en forme", "Mise en forme"),
                            ("Pertinence", "Pertinence"),
                            ("Section", "Section"),
                        ],
                        max_length=30,
                    ),
                ),
                ("Recommandations", models.TextField()),
                ("Etat", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Utilisateur",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("Id", models.BigAutoField(primary_key=True, serialize=False)),
                ("Nom", models.CharField(max_length=50)),
                ("Prenom", models.CharField(max_length=70)),
                (
                    "Role",
                    models.CharField(
                        choices=[
                            ("Administrateur", "Administrateur"),
                            ("Membre", "Membre"),
                            ("Mentor", "Mentor"),
                            ("Evaluateur", "Evaluateur"),
                        ],
                        default="Membre",
                        max_length=20,
                    ),
                ),
                ("Etat", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Profil",
            fields=[
                ("IdProfil", models.BigAutoField(primary_key=True, serialize=False)),
                ("Photo", models.ImageField(default=None, upload_to="images/")),
                ("Note", models.PositiveIntegerField()),
                ("Etat", models.BooleanField(default=True)),
                (
                    "Utilisateur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CV",
            fields=[
                ("IdCv", models.BigAutoField(primary_key=True, serialize=False)),
                ("FichierCv", models.FileField(upload_to="Fichier_CV/")),
                (
                    "Statut",
                    models.CharField(
                        choices=[("En attente", "En attente"), ("Evalué", "Evalué")],
                        default="En attente",
                        max_length=20,
                    ),
                ),
                ("Etat", models.BooleanField(default=True)),
                (
                    "Profil",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="TDEV.profil"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Certification",
            fields=[
                ("IdCertif", models.BigAutoField(primary_key=True, serialize=False)),
                ("Libelle", models.CharField(max_length=50)),
                ("Fichier", models.FileField(blank=True, upload_to="Fichier_Certif/")),
                ("Etat", models.BooleanField(default=True)),
                (
                    "Profil",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="TDEV.profil"
                    ),
                ),
            ],
        ),
    ]
